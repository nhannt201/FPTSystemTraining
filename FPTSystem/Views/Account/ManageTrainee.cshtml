@model TestSession.Models.EditAdminModel
@{
    ViewBag.Title = "Manage Trainee";
}

<div class="jumbotron">
    <h1>Manage Trainee Account</h1>
</div>
<div class="container">
    <div class="row col-12">
        <div class="alert alert-warning mt-3 p-2" role="alert" id="warnMsg" style="display: none;">
        </div>
        <div class="alert alert-success mt-3 p-2" role="alert" id="successMsg" style="display: none;">
        </div>
        @if (ViewBag.Status != null)
        {
            <div class="alert alert-warning mt-3 p-2" role="alert">

                @ViewBag.Status
            </div>
        }
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-success mt-3 p-2" role="alert">

                @ViewBag.Success
            </div>
        }
        <div class="col-10" id="editAccount">

            <h1>Account Information & Change Password</h1>
            @using (Html.BeginForm("ManageTrainee", "Account", new { user = Request.QueryString["user"] }, FormMethod.Post, new { @class = "border border-primary mt-3 p-3" }))
            {

        <fieldset>
            <div class="form-group">
                <label>Username:</label>
                <input type="text" value="@Request.QueryString["user"]" readonly class="form-control" />
            </div>
            <div class="form-group">
                <label>Full name:</label>
                @Html.TextBoxFor(m => m.fullname, new { @class = "form-control", @placeholder = Html.DisplayNameFor(n => n.fullname), @value = @Model.fullname })
            </div>
            <div class="form-group">
                <label>Email:</label>
                @Html.TextBoxFor(m => m.email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(n => n.email), @type = "email", @value = @Model.email })
            </div>
            <div class="form-group">
                <label>Telephone:</label>
                @Html.TextBoxFor(m => m.telephone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(n => n.telephone), @value = @Model.telephone, @type = "telephone" })
            </div>
            <div class="form-group">
                <label>New Password:</label>
                @Html.TextBoxFor(m => m.password, new { @class = "form-control", @placeholder = Html.DisplayNameFor(n => n.password), @value = "", @type = "password" })
            </div>
            <div class="form-group">
                <label>Re-password:</label>
                @Html.TextBoxFor(m => m.repassword, new { @class = "form-control", @placeholder = Html.DisplayNameFor(n => n.repassword), @value = "", @type = "password" })
            </div>
            <div class="form-group" id="editCourse">
                <label>Course:</label>
                <select class="form-control" id="couID" name="couID">
                    @if (Model.courseDB == null || Model.courseDB.Count() == 0)
                    {
                        <option value="0" selected>No Course</option>
                    }
                    else
                    {
                        if (Model.couID == 0)
                        {
                            <option value="0" selected>No Course</option>
                        }
                        foreach (var x in Model.courseDB)
                        {
                            if (x.couID == Model.couID) //Neu da tham gia khoa hoc roi
                            {
                                <option value="@x.couID" selected>@x.name</option>
                            }
                            else
                            {
                                <option value="@x.couID">@x.name</option>
                            }

                        }
                    }

                </select>
            </div>
            <div class="d-grid gap-2">
                <input type="submit" class="btn btn-lg btn-primary mt-3" value="Update" />
            </div>
            <div class="d-grid gap-2">
                <button type="button" class="btn btn-lg btn-danger mt-3" data-toggle="modal" data-target="#exampleModal">
                    Delete Account
                </button>
            </div>
        </fieldset>
            }
        </div>

    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Account after deletion cannot be restored, are you sure you want to delete it?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="clickDeleteAccount('@Request.QueryString["user"]');">Yes</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function clickDeleteAccount(account) {
        document.getElementById("warnMsg").innerHTML = "Deleting account...";
        document.getElementById("warnMsg").style.display = "block";
        document.getElementById("editAccount").style.display = "none";
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {

            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("successMsg").style.display = "block";
                document.getElementById("successMsg").innerHTML = 'Account has been deleted!<meta http-equiv="refresh" content="2; url=https://@Request.Url.Authority" />';
            }
        };
        xhttp.open("GET", "https://@Request.Url.Authority/Account/DeleteAccount?del_user=" + account, true);
        xhttp.send();
    }


</script>